name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

env:
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  security:
    name: Security
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ] # Note: This workflow requires only the LATEST version of PHP
        os: [ ubuntu-latest ]

    steps: # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Security Advisories
        run: composer require --dev roave/security-advisories:dev-latest

  static-analysis:
    name: Psalm
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ] # Note: This workflow requires only the LATEST version of PHP
        os: [ ubuntu-latest ]

    steps: # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Static Analysis
        continue-on-error: true
        run: vendor/bin/psalm --no-cache

  coding-standards:
    name: Coding Standards
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ] # Note: This workflow requires only the LATEST version of PHP
        os: [ ubuntu-latest ]

    steps: # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Check Coding Standards
        run: vendor/bin/phpcs --standard=phpcs.xml

  #
  # Execute unit tests on all valid PHP versions.
  #
  benchmark:
    name: Benchmark (PHP ${{matrix.php}})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        phpbnench: [ '1.2.0' ]
        php: [ '8.1' ]
        stability: [ prefer-stable ]

    steps: # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # PHP Extras
          coverage: pcov
          tools: pecl
          ini-values: "memory_limit=-1"
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress
      - name: Downloading phpbench/phpbench
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: wget https://github.com/phpbench/phpbench/releases/download/${{ matrix.phpbnench }}/phpbench.phar

      # Execution
      - name: Execute Benchmarks
        run: php phpbench.phar run --report=aggregate

  #
  # Execute unit tests on all valid PHP versions.
  #
  test:
    name: Build (PHP ${{matrix.php}}, ${{ matrix.os }}, ${{ matrix.stability }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        stability: [ prefer-lowest, prefer-stable ]

    steps: # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2

      # Install PHP Dependencies
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # PHP Extras
          coverage: pcov
          tools: pecl
          ini-values: "memory_limit=-1"
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies (PHP Stable)
        if: matrix.php != '8.2'
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress
      - name: Install Dependencies (PHP Next)
        if: matrix.php == '8.2'
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --ignore-platform-reqs --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress


      # Execution
      - name: Execute Tests
        run: vendor/bin/phpunit

  subsplit:
    name: Split (${{ matrix.package.local_path }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        package:
          # Kernel Libraries
          - local_path: 'buffer'
            split_repository: 'buffer'
          - local_path: 'compiler'
            split_repository: 'compiler'
          - local_path: 'exception'
            split_repository: 'exception'
          - local_path: 'grammar'
            split_repository: 'grammar'
          - local_path: 'lexer'
            split_repository: 'lexer'
          - local_path: 'parser'
            split_repository: 'parser'
          - local_path: 'position'
            split_repository: 'position'
          - local_path: 'source'
            split_repository: 'source'
          - local_path: 'visitor'
            split_repository: 'visitor'
          # Contracts
          - local_path: 'contracts/ast'
            split_repository: 'ast-contracts'
          - local_path: 'contracts/buffer'
            split_repository: 'buffer-contracts'
          - local_path: 'contracts/grammar'
            split_repository: 'grammar-contracts'
          - local_path: 'contracts/lexer'
            split_repository: 'lexer-contracts'
          - local_path: 'contracts/parser'
            split_repository: 'parser-contracts'
          - local_path: 'contracts/position'
            split_repository: 'position-contracts'
          - local_path: 'contracts/source'
            split_repository: 'source-contracts'
          # Metadata
          - local_path: 'meta/runtime'
            split_repository: 'runtime'
          - local_path: 'meta/contracts'
            split_repository: 'contracts'
          # Documentation
          - local_path: '../docs'
            split_repository: 'docs'

    steps:
      - uses: actions/checkout@v2

      # no tag
      - if: "!startsWith(github.ref, 'refs/tags/')"
        name: Monorepo Split of ${{ matrix.package.split_repository }}
        uses: symplify/github-action-monorepo-split@2.0
        with:
          package-directory: 'libs/${{ matrix.package.local_path }}'
          split-repository-organization: 'phplrt'
          split-repository-name: '${{ matrix.package.split_repository }}'
          user-name: "GitHub Action"
          user-email: "action@github.com"
          branch: "master"

      # with tag
      - if: "startsWith(github.ref, 'refs/tags/')"
        name: Monorepo Tagged Split of ${{ matrix.package }}
        uses: symplify/github-action-monorepo-split@2.0
        with:
          tag: ${GITHUB_REF#refs/tags/}

          package-directory: 'libs/${{ matrix.package.local_path }}'
          split-repository-organization: 'phplrt'
          split-repository-name: '${{ matrix.package.split_repository }}'
          user-name: "GitHub Action"
          user-email: "action@github.com"
          branch: "master"